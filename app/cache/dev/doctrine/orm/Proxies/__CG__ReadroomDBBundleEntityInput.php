<?php

namespace Proxies\__CG__\Readroom\DBBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Input extends \Readroom\DBBundle\Entity\Input implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setLocation($location)
    {
        $this->__load();
        return parent::setLocation($location);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }

    public function setBookSpine($book_spine)
    {
        $this->__load();
        return parent::setBookSpine($book_spine);
    }

    public function getBookSpine()
    {
        $this->__load();
        return parent::getBookSpine();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setInputQuote($input_quote)
    {
        $this->__load();
        return parent::setInputQuote($input_quote);
    }

    public function getInputQuote()
    {
        $this->__load();
        return parent::getInputQuote();
    }

    public function setTagName($tag_name)
    {
        $this->__load();
        return parent::setTagName($tag_name);
    }

    public function getTagName()
    {
        $this->__load();
        return parent::getTagName();
    }

    public function setInputDate($input_date)
    {
        $this->__load();
        return parent::setInputDate($input_date);
    }

    public function getInputDate()
    {
        $this->__load();
        return parent::getInputDate();
    }

    public function setSource($source)
    {
        $this->__load();
        return parent::setSource($source);
    }

    public function getSource()
    {
        $this->__load();
        return parent::getSource();
    }

    public function setComment($comment)
    {
        $this->__load();
        return parent::setComment($comment);
    }

    public function getComment()
    {
        $this->__load();
        return parent::getComment();
    }

    public function setStart($start)
    {
        $this->__load();
        return parent::setStart($start);
    }

    public function getStart()
    {
        $this->__load();
        return parent::getStart();
    }

    public function setEnd($end)
    {
        $this->__load();
        return parent::setEnd($end);
    }

    public function getEnd()
    {
        $this->__load();
        return parent::getEnd();
    }

    public function addComplaint(\Readroom\DBBundle\Entity\Complaint $complaint)
    {
        $this->__load();
        return parent::addComplaint($complaint);
    }

    public function getComplaints()
    {
        $this->__load();
        return parent::getComplaints();
    }

    public function addReply(\Readroom\DBBundle\Entity\Reply $reply)
    {
        $this->__load();
        return parent::addReply($reply);
    }

    public function getReplies()
    {
        $this->__load();
        return parent::getReplies();
    }

    public function setBook(\Readroom\DBBundle\Entity\Book $book = NULL)
    {
        $this->__load();
        return parent::setBook($book);
    }

    public function getBook()
    {
        $this->__load();
        return parent::getBook();
    }

    public function setReader(\Readroom\DBBundle\Entity\Reader $reader = NULL)
    {
        $this->__load();
        return parent::setReader($reader);
    }

    public function getReader()
    {
        $this->__load();
        return parent::getReader();
    }


    public function __sleep()
    {
        return array_merge(array('__isInitialized__'), parent::__sleep());
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}